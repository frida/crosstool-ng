diff -Nur glibc-ports-2.5-orig/sysdeps/unix/sysv/linux/arm/nptl/lowlevellock.h glibc-ports-2.5/sysdeps/unix/sysv/linux/arm/nptl/lowlevellock.h
--- glibc-ports-2.5-orig/sysdeps/unix/sysv/linux/arm/nptl/lowlevellock.h	2006-08-04 20:56:15.000000000 +0200
+++ glibc-ports-2.5/sysdeps/unix/sysv/linux/arm/nptl/lowlevellock.h	2022-06-01 22:22:19.051667991 +0200
@@ -99,42 +99,13 @@
   })
 
 
-static inline int __attribute__((always_inline))
-__lll_mutex_trylock (int *futex)
-{
-  int flag = 1, old;
-  asm volatile (
-    "\tswp	%[old], %[flag], [%[futex]]	@ try to take the lock\n"
-    "\tcmp	%[old], #1			@ check old lock value\n"
-    "\tmovlo	%[flag], #0			@ if we got it, return 0\n"
-    "\tswphi	%[flag], %[old], [%[futex]]	@ if it was contested,\n"
-    "						@ restore the contested flag,\n"
-    "						@ and check whether that won."
-    : [futex] "+&r" (futex), [flag] "+&r" (flag), [old] "=&r" (old)
-    : : "memory" );
-
-  return flag;
-}
+#define __lll_mutex_trylock(futex)	\
+  atomic_compare_and_exchange_bool_acq ((futex), 1, 0)
 #define lll_mutex_trylock(lock)	__lll_mutex_trylock (&(lock))
 
 
-static inline int __attribute__((always_inline))
-__lll_mutex_cond_trylock (int *futex)
-{
-  int flag = 2, old;
-  asm volatile (
-    "\tswp	%[old], %[flag], [%[futex]]	@ try to take the lock\n"
-    "\tcmp	%[old], #1			@ check old lock value\n"
-    "\tmovlo	%[flag], #0			@ if we got it, return 0\n"
-    "\tswphi	%[flag], %[old], [%[futex]]	@ if it was contested,\n"
-    "						@ restore the contested flag,\n"
-    "						@ and check whether that won."
-    : [futex] "+&r" (futex), [flag] "+&r" (flag), [old] "=&r" (old)
-    : : "memory" );
-
-  return flag;
-}
-#define lll_mutex_cond_trylock(lock)	__lll_mutex_cond_trylock (&(lock))
+#define lll_mutex_cond_trylock(lock)	\
+  atomic_compare_and_exchange_bool_acq (&(lock), 2, 0)
 
 
 static inline int __attribute__((always_inline))
